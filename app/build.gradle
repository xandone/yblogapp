apply plugin: 'com.android.application'
//apply plugin: 'com.android.library'
apply plugin: 'com.jakewharton.butterknife'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion

    defaultConfig {
        applicationId rootProject.ext.android.applicationId
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true

        // 混淆配置
        proguardFiles 'proguard-app.pro'
    }

    signingConfigs {
        debug {
            storeFile file(STORE_FILE_PATH)
            storePassword STORE_PASSWORD
            keyAlias KEY_ALIAS
            keyPassword KEY_PASSWORD
        }

        release {
            storeFile file(STORE_FILE_PATH)
            storePassword STORE_PASSWORD
            keyAlias KEY_ALIAS
            keyPassword KEY_PASSWORD
        }
    }

    buildTypes {
        debug {
            minifyEnabled false
            buildConfigField('boolean', 'LOG_ENABLE', 'true')
            buildConfigField('String', 'BUGLY_ID', '"05e52bce99"')
            //调试模式下只保留一种架构的 so 库，提升打包速度
            ndk {
                abiFilters "armeabi-v7a"
            }
        }
        release {
            minifyEnabled true
            buildConfigField('boolean', 'LOG_ENABLE', 'false')
            buildConfigField('String', 'BUGLY_ID', '"05e52bce99"')
            ndk {
                abiFilters "x86", "armeabi", "armeabi-v7a"
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }


//    def appName = "yblog"
    applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = rootProject.getName() + "_${defaultConfig.versionName}_${releaseTime()}_${variant.buildType.name}.apk"
        }
    }
}

static def releaseTime() {
    return new Date().format("yyyyMMddHHmm", TimeZone.getTimeZone("GMT+08:00"))
}

dependencies {
    // 依赖 libs 目录下所有的 jar 和 aar 包
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation project(':baselib')
    implementation project(':widgetlib')

    implementation rootProject.ext.depends.appcompat
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'

    implementation 'com.jakewharton:butterknife:10.2.2'
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.2.2'

    implementation 'com.android.support:multidex:1.0.3'

    implementation([
            'com.squareup.retrofit2:converter-gson:2.8.1',
            "com.squareup.retrofit2:retrofit:2.8.1",
            "com.squareup.retrofit2:converter-gson:2.8.1",
            'com.squareup.retrofit2:adapter-rxjava2:2.8.1',
            "com.squareup.okhttp3:okhttp:4.8.1",
            "com.squareup.okhttp3:logging-interceptor:4.8.1"
    ])

    implementation "io.reactivex.rxjava2:rxjava:2.2.18"
    implementation "io.reactivex.rxjava2:rxandroid:2.1.1"

    implementation 'com.github.Hitomis:transferee:1.6.1'
    implementation 'com.github.Hitomis.transferee:GlideImageLoader:1.6.1'

    implementation 'pub.devrel:easypermissions:3.0.0'

    implementation 'com.liulishuo.okdownload:okdownload:1.0.7'

    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'

    // 沉浸式框架：https://github.com/gyf-dev/ImmersionBar
    implementation 'com.gyf.immersionbar:immersionbar:3.0.0'

    implementation 'com.tencent.bugly:crashreport:3.3.3'
    implementation 'com.tencent.bugly:nativecrashreport:3.7.700'

}
